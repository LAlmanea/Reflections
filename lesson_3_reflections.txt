When would you want to use a remote repository rather than keeping all your work
local?

    When I want to collaborate with other people or working on my project using a different computer.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    I need to always pull changes because I don't need access to every little change I make and that saves me some 
    space in my computer (even if little) and also they're already on Github so there's really no need to have 
    every change copied to my computer. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forking is a term only present in Github; it means making a copy of an existing repository in someone else's 
    account and having it present in my account. This is a good way of working on someone's code even if I don't 
    have permission. Because the changes I make are just present in my copied version of the code not the original. Also, Forking is a nice way of giving credit to the person who I copied the code from. 
    Cloning on the other hand is making a copy of a repo from Github to my local computer, or from my computer to my 
    computer (local cloning) - but I don't know how to do this yet or why it's useful! 
    Branches: are branches - or side track- made from the master file. This is particularly useful for collaboration. 
    So if a team wants to work on a project, they start from a main file then each collaborater modify -or branch- from the main file to make everything intact. Then the team leader -or the whole team- can decide on what to keep from those modifications of added or subtracted features to the main, with the ability to make track of every change made. 

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Because the last copy have access to its ancesters. So when I have the last copy 
    I also have access to the older versions. 

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without Git or Github, the collaboration would be though the conventional means like sharing files via email. It's
    only easy if the project is very small and should be done in a short period of time.
    Without Github, collaboration would be harder as the project gets more comlicated and involves more than two people or it     requires collaboration for long periods of time. This kind of collaboration requires tracking, which wouldn't be easy at       all via conventional means! So github is great for that (^_^)

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Working on the master branch and making changes to it is much easier than creating a new branch on working on that. However, sometime creating a branch is better if you want to make changes like add or subtract some features and you don't want to make them part of the master branch if it's working well. The branches away from the master branch are good for taking risks that might or might not work; and only when they work, they're worth to be merged to the master branch! 
